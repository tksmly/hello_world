name: Rust

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: hello_world

jobs:
  
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    
    - name: 'Setup Rust'
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-gnu, i686-pc-windows-gnu, x86_64-unknown-linux-gnu, i686-unknown-linux-gnu
    - uses: Swatinem/rust-cache@v2
      with:
        key: ubuntu
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y  mingw-w64
    - name: Install rust target
      run: rustup target add x86_64-pc-windows-gnu i686-pc-windows-gnu x86_64-unknown-linux-gnu i686-unknown-linux-gnu

        
    - name: Build_x86_64-pc-windows-gnu
      run: cargo build --release --target x86_64-pc-windows-gnu
    - name: Build_i686-pc-windows-gnu
      run: cargo build --release --target i686-pc-windows-gnu
    - name: Build_x86_64-unknown-linux-gnu
      run: cargo build --release --target x86_64-unknown-linux-gnu
    - name: Build_i686-unknown-linux-gnu
      run: cargo build --release --target i686-unknown-linux-gnu

    - uses: actions/upload-artifact@v3
      with:
        name: upload
        path: |
          target/x86_64-pc-windows-gnu/release/$PROJECT_NAME.exe
          target/i686-pc-windows-gnu/release/$PROJECT_NAME.exe
          target/x86_64-unknown-linux-gnu/release/$PROJECT_NAME
          target/i686-unknown-linux-gnu/release/$PROJECT_NAME
          
        
#     - name: Release
#       uses: softprops/action-gh-release@v1
# #       if: startsWith(github.ref, 'refs/tags/')
#       with:
#           files: target/${{ matrix.target }}/release/hello_world.${{ matrix.extension }}
#           append_body: true
