name: Rust

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  
  build:
    name: ${{ matrix.target }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { target: aarch64-unknown-linux-gnu, os: ubuntu-latest}
          - { target: arm-unknown-linux-gnueabihf, os: ubuntu-latest}
          - { target: i686-pc-windows-gnu, os: windows-latest, extension: "exe"}
          - { target: i686-unknown-linux-gnu, os: ubuntu-latest}
          - { target: x86_64-apple-darwin, os: macos-latest}
          - { target: x86_64-pc-windows-gnu, os: windows-latest, extension: "exe"}
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest}
          

    steps:
    - uses: actions/checkout@v3
    
    
    - name: 'Setup Rust'
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    - uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}
        
    - name: Install dependencies (ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf
    - name: Install rust target
      run: rustup target add ${{ matrix.target }}

        
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
      
    - name: Release
      uses: softprops/action-gh-release@v1
#       if: startsWith(github.ref, 'refs/tags/')
      with:
          files: target/${{ matrix.target }}/release/hello_world.${{ matrix.extension }}
          append_body: true
